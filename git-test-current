#!/bin/bash

# Test the current branch by merging the mainline into a new branch. Hopefully
# there aren't conflicts.

TEST_PREFIX=test-
TEST_PREFIX_SIZE=${#TEST_PREFIX}
MAINLINE_REPO=$(git config mainline.repo)
MAINLINE_BRANCH=$(git config mainline.branch)

MAINLINE=${MAINLINE_REPO:-origin}/${MAINLINE_BRANCH:-master}

CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)

git auto-stash-if-necessary

# If the current branch is a test branch, back up to the real branch and delete
# the old test branch.
if [[ "$CURRENT_BRANCH" == "$TEST_PREFIX"* ]]; then
    CURRENT_BRANCH="${CURRENT_BRANCH:$TEST_PREFIX_SIZE}"
    git checkout "$CURRENT_BRANCH"
fi

TEST_BRANCH_NAME="$TEST_PREFIX$CURRENT_BRANCH"

if git rev-parse --verify --quiet "$TEST_BRANCH_NAME"; then
    git checkout "$MAINLINE"
    git branch -D "$TEST_BRANCH_NAME"
fi


git branch "$TEST_BRANCH_NAME"
git checkout "$TEST_BRANCH_NAME"
git fetch --all 1> /dev/null 2>&1
git merge "$MAINLINE"

git auto-unstash-if-necessary
